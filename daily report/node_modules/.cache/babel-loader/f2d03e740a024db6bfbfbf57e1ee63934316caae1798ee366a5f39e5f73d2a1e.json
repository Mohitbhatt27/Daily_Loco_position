{"ast":null,"code":"var _jsxFileName = \"D:\\\\daily-report\\\\daily report\\\\src\\\\component\\\\upload-component\\\\index.js\";\nimport { CloudUploadOutlined, CheckOutlined } from '@ant-design/icons';\n// import { CheckOutlined } from '@ant-design/icons';\nimport { Button, Progress, Upload } from 'antd';\nimport React from 'react';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction UploadComponent(_ref) {\n  let {\n    accept = '',\n    action = 'http://localhost:3001',\n    files = [],\n    // message: messageText = 'Click to upload or <b>drag</b> and drop',\n    message: messageText = 'Click to upload or drag and drop',\n    multiple = false,\n    setFiles,\n    style,\n    width = '300px',\n    method = 'post',\n    iconSize = 60,\n    progress = 0,\n    setProgress = () => '',\n    setResponseMessage = () => '',\n    isValidFile = () => {\n      return {\n        status: true,\n        message: 'success'\n      };\n    }\n  } = _ref;\n  // Progress status while uploading an item\n\n  // updates files on selecting new files\n  function handleChange(file, newFileList) {\n    const fileValidity = isValidFile(file);\n    if (fileValidity.status) {\n      console.log(fileValidity);\n      setFiles(newFileList);\n      if (file) setProgress(file.percent);\n    } else {\n      setResponseMessage(fileValidity.message);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"uploadFile\",\n      style: {\n        width,\n        ...style\n      },\n      children: /*#__PURE__*/_jsxDEV(Upload, {\n        accept: accept,\n        action: action,\n        className: \"uploader\",\n        fileList: files,\n        onChange: _ref2 => {\n          let {\n            file,\n            fileList: newFileList\n          } = _ref2;\n          return handleChange(file, newFileList);\n        },\n        customRequest: _ref3 => {\n          let {\n            file,\n            onSuccess\n          } = _ref3;\n          return onSuccess('ok', file);\n        },\n        multiple: multiple,\n        beforeUpload: file => isValidFile(file).status,\n        showUploadList: false,\n        method: method,\n        progress: {\n          style: {\n            display: 'none'\n          }\n        },\n        onClick: () => setProgress(0),\n        onRemove: () => setProgress(0),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"uploadFileContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"uploadProgressBar\",\n            children: [/*#__PURE__*/_jsxDEV(Progress, {\n              className: \"uploadProgress\",\n              format: null,\n              width: iconSize,\n              percent: files.length > 0 ? progress : 0,\n              strokeColor: \"#3bc171\",\n              type: \"circle\",\n              showInfo: false\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 22\n            }, this), progress !== 100 || files.length === 0 ? /*#__PURE__*/_jsxDEV(CloudUploadOutlined, {\n              className: \"uploadIcon\",\n              style: {\n                fontSize: 0.45 * iconSize,\n                color: '#ddd'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 25\n            }, this) : /*#__PURE__*/_jsxDEV(CheckOutlined, {\n              className: \"uploadIcon\",\n              style: {\n                fontSize: 0.45 * iconSize,\n                color: '#3bc171'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"uploadText\"\n            //   dangerouslySetInnerHTML={{ __html: messageText }}\n            //   children={messageText}\n            ,\n            children: messageText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              className: \"uploadButton\",\n              size: \"middle\",\n              type: \"default\",\n              children: \"Browse File\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 22\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 10\n    }, this)\n  }, void 0, false);\n}\n_c = UploadComponent;\nexport default UploadComponent;\nvar _c;\n$RefreshReg$(_c, \"UploadComponent\");","map":{"version":3,"names":["CloudUploadOutlined","CheckOutlined","Button","Progress","Upload","React","UploadComponent","accept","action","files","message","messageText","multiple","setFiles","style","width","method","iconSize","progress","setProgress","setResponseMessage","isValidFile","status","handleChange","file","newFileList","fileValidity","console","log","percent","fileList","onSuccess","display","length","fontSize","color"],"sources":["D:/daily-report/daily report/src/component/upload-component/index.js"],"sourcesContent":["import { CloudUploadOutlined, CheckOutlined } from '@ant-design/icons';\n// import { CheckOutlined } from '@ant-design/icons';\nimport { Button, Progress, Upload } from 'antd';\nimport React from 'react';\nimport './style.css';\n\nfunction UploadComponent({\n   accept = '',\n   action = 'http://localhost:3001',\n   files = [],\n   // message: messageText = 'Click to upload or <b>drag</b> and drop',\n   message: messageText = 'Click to upload or drag and drop',\n   multiple = false,\n   setFiles,\n   style,\n   width = '300px',\n   method = 'post',\n   iconSize = 60,\n   progress = 0,\n   setProgress = () => '',\n   setResponseMessage = () => '',\n   isValidFile = () => { return { status: true, message: 'success' }; },\n}) {\n   // Progress status while uploading an item\n\n   // updates files on selecting new files\n   function handleChange(file, newFileList) {\n      const fileValidity = isValidFile(file);\n      if (fileValidity.status) {\n         console.log(fileValidity);\n         setFiles(newFileList);\n      if (file) setProgress(file.percent);\n      } else {\n         setResponseMessage(fileValidity.message);\n      }\n   }\n\n   return (\n      <>\n         <div className=\"uploadFile\" style={{ width, ...style }}>\n            <Upload\n              accept={accept}\n              action={action}\n              className=\"uploader\"\n              fileList={files}\n              onChange={({ file, fileList: newFileList }) => handleChange(file, newFileList) }\n              customRequest={({ file, onSuccess }) => onSuccess('ok', file)}\n              multiple={multiple}\n              beforeUpload={(file) => isValidFile(file).status}\n              showUploadList={false}\n              method={method}\n              progress={{\n                 style: {\n                    display: 'none',\n                 },\n               }}\n              onClick={() => setProgress(0)}\n              onRemove={() => setProgress(0)}\n            >\n               <div className=\"uploadFileContainer\">\n                  <div className=\"uploadProgressBar\">\n                     <Progress\n                       className=\"uploadProgress\"\n                       format={null}\n                       width={ iconSize }\n                       percent={ files.length > 0 ? progress : 0 }\n                       strokeColor=\"#3bc171\"\n                       type=\"circle\"\n                       showInfo={false}\n                     />\n                     {progress !== 100 || files.length === 0 ? (               \n                        <CloudUploadOutlined className=\"uploadIcon\"\n                        style={{ fontSize: 0.45 * iconSize, color: '#ddd' }}/>\n                     ) : (\n                        <CheckOutlined\n                          className=\"uploadIcon\"\n                          style={{ fontSize: 0.45 * iconSize, color: '#3bc171' }}\n                        />\n                     )}\n                     {/* <CloudUploadOutlined className=\"uploadIcon\" /> */}\n                  </div>\n                  \n                  <p\n                    className=\"uploadText\"\n                  //   dangerouslySetInnerHTML={{ __html: messageText }}\n                  //   children={messageText}\n                  >{messageText}</p>\n                  <div>\n                     <Button\n                       className=\"uploadButton\"\n                       size=\"middle\"\n                       type=\"default\"\n                     >\n                        Browse File\n                     </Button>\n                  </div>\n               </div>\n            </Upload>\n            {/* {showList && (\n               <UploadList\n                  file={files[0]}\n                  files={files}\n                  showList={true}\n               />\n            )} */}\n         </div>\n      </>\n   );\n}\n\nexport default UploadComponent;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}